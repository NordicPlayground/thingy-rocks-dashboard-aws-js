<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width">

<title>Overlay Rotation</title>

<link rel="stylesheet" href="../assets/example.css">

<style>

.my-overlay {
	background-color: white;
	padding: 0.8em 1em;
	border-radius: 0.5em;
	text-align: center;
	max-width: 20em;
	filter: drop-shadow( 0 1px 2px black );
	transform-origin: 50% 115%;
	opacity: 0;
	transition: opacity 1s ease;
	transition-delay: 0.25s;
}

.show-overlays .my-overlay {
	opacity: 1;
}

.my-overlay::after {
	content: "";
	background-color: white;
	position: absolute;
	left: 50%;
	top: 100%;
	width: 0.5em;
	height: 0.5em;
	transform: translate(-0.25em, -0.25em) rotate(45deg);
}

</style>

<script src="../../miniature.earth.js"></script>

<script>

window.addEventListener( "earthjsload", function() {

	myearth = new Earth( "myearth", {
		quality: 4,
		location: { lat: 0, lng: 0 },
		autoRotate : true,
		zoomable: true
	} );
	
	
	myearth.addEventListener( "ready", function() {
		
		// add overlays
		
		this.addOverlay( {
			content: 'New York',
			location : { lat: 40.69, lng: -74.05 },
			className : 'my-overlay'
		} );
		
		this.addOverlay( {
			content: 'Tokyo',
			location : {lat: 35, lng: 140},
			className : 'my-overlay'
		} );
		
		this.addOverlay( {
			content: 'Cape Town',
			location : {lat: -33.9, lng: 18.6},
			className : 'my-overlay'
		} );
		
		// start rotation instantly
		myearth.startAutoRotate();
		
		// fade in overlays
		setTimeout( function() {
			myearth.element.classList.add('show-overlays');
		}, 100);

	} );
	
	
	// update rotation on location change
	myearth.addEventListener( "change", updateOverlayRotation );
	
	
} );


function updateOverlayRotation() {

	// container center point
	var cx = myearth.element.offsetWidth / 2;
	var cy = myearth.element.offsetHeight / 2;
	
	// apply rotation to each overlay
	for ( var i = 0; i < myearth.overlays.length; i++ ) {
		if ( ! myearth.overlays[i].elementPosition ) continue;
		myearth.overlays[i].element.firstChild.style.transform = 'translate(-50%, -115%) rotate(' +
			getAngle(cx,cy, myearth.overlays[i].elementPosition.x, myearth.overlays[i].elementPosition.y ) +
		'deg)';
	}
	
}


function getAngle(cx, cy, x, y) {

	var dy = y - cy;
	var dx = x - cx;
	var theta = Math.atan2(dy, dx);
	theta *= 180 / Math.PI;
	return theta + 90;
	
}

</script>

</head>
<body>
	<h1>Overlay Rotation</h1>
	
	<div id="wrapper">		
	
		<div id="myearth" class="earth-js"></div>
		
	</div>
</body>
</html>